# Thanks to https://github.com/dom96/gbemulator/blob/master/opcodes.nim for this opcodes extract

type
  Opcode* = tuple
    mnemonic: string
    operandOne: string
    operandTwo: string
    len: int
    cycles: int
    idleCycles: int
    z, n, h, c: char
    opcode: uint8

const opcs*: array[0 .. 0xFF, Opcode] = [
  (mnemonic: "NOP", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x00),
  (mnemonic: "LD", operandOne: "BC", operandTwo: "D16", len: 3, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0x01),
  (mnemonic: "LD", operandOne: "(BC)", operandTwo: "A", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x02),
  (mnemonic: "INC", operandOne: "BC", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x03),
  (mnemonic: "INC", operandOne: "B", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: '-', opcode: 0x04),
  (mnemonic: "DEC", operandOne: "B", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: '-', opcode: 0x05),
  (mnemonic: "LD", operandOne: "B", operandTwo: "D8", len: 2, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x06),
  (mnemonic: "RLCA", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '0', h: '0', c: 'C', opcode: 0x07),
  (mnemonic: "LD", operandOne: "(A16)", operandTwo: "SP", len: 3, cycles: 20, idleCycles: 20, z: '-', n: '-', h: '-', c: '-', opcode: 0x08),
  (mnemonic: "ADD", operandOne: "HL", operandTwo: "BC", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '0', h: 'H', c: 'C', opcode: 0x09),
  (mnemonic: "LD", operandOne: "A", operandTwo: "(BC)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x0A),
  (mnemonic: "DEC", operandOne: "BC", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x0B),
  (mnemonic: "INC", operandOne: "C", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: '-', opcode: 0x0C),
  (mnemonic: "DEC", operandOne: "C", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: '-', opcode: 0x0D),
  (mnemonic: "LD", operandOne: "C", operandTwo: "D8", len: 2, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x0E),
  (mnemonic: "RRCA", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '0', n: '0', h: '0', c: 'C', opcode: 0x0F),
  (mnemonic: "STOP", operandOne: "0", operandTwo: "", len: 2, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x10),
  (mnemonic: "LD", operandOne: "DE", operandTwo: "D16", len: 3, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0x11),
  (mnemonic: "LD", operandOne: "(DE)", operandTwo: "A", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x12),
  (mnemonic: "INC", operandOne: "DE", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x13),
  (mnemonic: "INC", operandOne: "D", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: '-', opcode: 0x14),
  (mnemonic: "DEC", operandOne: "D", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: '-', opcode: 0x15),
  (mnemonic: "LD", operandOne: "D", operandTwo: "D8", len: 2, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x16),
  (mnemonic: "RLA", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '0', h: '0', c: 'C', opcode: 0x17),
  (mnemonic: "JR", operandOne: "R8", operandTwo: "", len: 2, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0x18),
  (mnemonic: "ADD", operandOne: "HL", operandTwo: "DE", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '0', h: 'H', c: 'C', opcode: 0x19),
  (mnemonic: "LD", operandOne: "A", operandTwo: "(DE)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x1A),
  (mnemonic: "DEC", operandOne: "DE", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x1B),
  (mnemonic: "INC", operandOne: "E", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: '-', opcode: 0x1C),
  (mnemonic: "DEC", operandOne: "E", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: '-', opcode: 0x1D),
  (mnemonic: "LD", operandOne: "E", operandTwo: "D8", len: 2, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x1E),
  (mnemonic: "RRA", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '0', h: '0', c: 'C', opcode: 0x1F),
  (mnemonic: "JR", operandOne: "NZ", operandTwo: "R8", len: 2, cycles: 12, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x20),
  (mnemonic: "LD", operandOne: "HL", operandTwo: "D16", len: 3, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0x21),
  (mnemonic: "LD", operandOne: "(HL+)", operandTwo: "A", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x22),
  (mnemonic: "INC", operandOne: "HL", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x23),
  (mnemonic: "INC", operandOne: "H", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: '-', opcode: 0x24),
  (mnemonic: "DEC", operandOne: "H", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: '-', opcode: 0x25),
  (mnemonic: "LD", operandOne: "H", operandTwo: "D8", len: 2, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x26),
  (mnemonic: "DAA", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '-', h: '0', c: 'C', opcode: 0x27),
  (mnemonic: "JR", operandOne: "Z", operandTwo: "R8", len: 2, cycles: 12, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x28),
  (mnemonic: "ADD", operandOne: "HL", operandTwo: "HL", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '0', h: 'H', c: 'C', opcode: 0x29),
  (mnemonic: "LD", operandOne: "A", operandTwo: "(HL+)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x2A),
  (mnemonic: "DEC", operandOne: "HL", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x2B),
  (mnemonic: "INC", operandOne: "L", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: '-', opcode: 0x2C),
  (mnemonic: "DEC", operandOne: "L", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: '-', opcode: 0x2D),
  (mnemonic: "LD", operandOne: "L", operandTwo: "D8", len: 2, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x2E),
  (mnemonic: "CPL", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '1', h: '1', c: '-', opcode: 0x2F),
  (mnemonic: "JR", operandOne: "NC", operandTwo: "R8", len: 2, cycles: 12, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x30),
  (mnemonic: "LD", operandOne: "SP", operandTwo: "D16", len: 3, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0x31),
  (mnemonic: "LD", operandOne: "(HL-)", operandTwo: "A", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x32),
  (mnemonic: "INC", operandOne: "SP", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x33),
  (mnemonic: "INC", operandOne: "(HL)", operandTwo: "", len: 1, cycles: 12, idleCycles: 12, z: 'Z', n: '0', h: 'H', c: '-', opcode: 0x34),
  (mnemonic: "DEC", operandOne: "(HL)", operandTwo: "", len: 1, cycles: 12, idleCycles: 12, z: 'Z', n: '1', h: 'H', c: '-', opcode: 0x35),
  (mnemonic: "LD", operandOne: "(HL)", operandTwo: "D8", len: 2, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0x36),
  (mnemonic: "SCF", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '0', h: '0', c: '1', opcode: 0x37),
  (mnemonic: "JR", operandOne: "C", operandTwo: "R8", len: 2, cycles: 12, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x38),
  (mnemonic: "ADD", operandOne: "HL", operandTwo: "SP", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '0', h: 'H', c: 'C', opcode: 0x39),
  (mnemonic: "LD", operandOne: "A", operandTwo: "(HL-)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x3A),
  (mnemonic: "DEC", operandOne: "SP", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x3B),
  (mnemonic: "INC", operandOne: "A", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: '-', opcode: 0x3C),
  (mnemonic: "DEC", operandOne: "A", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: '-', opcode: 0x3D),
  (mnemonic: "LD", operandOne: "A", operandTwo: "D8", len: 2, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x3E),
  (mnemonic: "CCF", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '0', h: '0', c: 'C', opcode: 0x3F),
  (mnemonic: "LD", operandOne: "B", operandTwo: "B", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x40),
  (mnemonic: "LD", operandOne: "B", operandTwo: "C", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x41),
  (mnemonic: "LD", operandOne: "B", operandTwo: "D", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x42),
  (mnemonic: "LD", operandOne: "B", operandTwo: "E", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x43),
  (mnemonic: "LD", operandOne: "B", operandTwo: "H", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x44),
  (mnemonic: "LD", operandOne: "B", operandTwo: "L", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x45),
  (mnemonic: "LD", operandOne: "B", operandTwo: "(HL)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x46),
  (mnemonic: "LD", operandOne: "B", operandTwo: "A", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x47),
  (mnemonic: "LD", operandOne: "C", operandTwo: "B", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x48),
  (mnemonic: "LD", operandOne: "C", operandTwo: "C", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x49),
  (mnemonic: "LD", operandOne: "C", operandTwo: "D", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x4A),
  (mnemonic: "LD", operandOne: "C", operandTwo: "E", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x4B),
  (mnemonic: "LD", operandOne: "C", operandTwo: "H", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x4C),
  (mnemonic: "LD", operandOne: "C", operandTwo: "L", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x4D),
  (mnemonic: "LD", operandOne: "C", operandTwo: "(HL)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x4E),
  (mnemonic: "LD", operandOne: "C", operandTwo: "A", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x4F),
  (mnemonic: "LD", operandOne: "D", operandTwo: "B", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x50),
  (mnemonic: "LD", operandOne: "D", operandTwo: "C", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x51),
  (mnemonic: "LD", operandOne: "D", operandTwo: "D", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x52),
  (mnemonic: "LD", operandOne: "D", operandTwo: "E", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x53),
  (mnemonic: "LD", operandOne: "D", operandTwo: "H", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x54),
  (mnemonic: "LD", operandOne: "D", operandTwo: "L", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x55),
  (mnemonic: "LD", operandOne: "D", operandTwo: "(HL)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x56),
  (mnemonic: "LD", operandOne: "D", operandTwo: "A", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x57),
  (mnemonic: "LD", operandOne: "E", operandTwo: "B", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x58),
  (mnemonic: "LD", operandOne: "E", operandTwo: "C", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x59),
  (mnemonic: "LD", operandOne: "E", operandTwo: "D", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x5A),
  (mnemonic: "LD", operandOne: "E", operandTwo: "E", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x5B),
  (mnemonic: "LD", operandOne: "E", operandTwo: "H", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x5C),
  (mnemonic: "LD", operandOne: "E", operandTwo: "L", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x5D),
  (mnemonic: "LD", operandOne: "E", operandTwo: "(HL)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x5E),
  (mnemonic: "LD", operandOne: "E", operandTwo: "A", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x5F),
  (mnemonic: "LD", operandOne: "H", operandTwo: "B", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x60),
  (mnemonic: "LD", operandOne: "H", operandTwo: "C", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x61),
  (mnemonic: "LD", operandOne: "H", operandTwo: "D", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x62),
  (mnemonic: "LD", operandOne: "H", operandTwo: "E", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x63),
  (mnemonic: "LD", operandOne: "H", operandTwo: "H", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x64),
  (mnemonic: "LD", operandOne: "H", operandTwo: "L", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x65),
  (mnemonic: "LD", operandOne: "H", operandTwo: "(HL)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x66),
  (mnemonic: "LD", operandOne: "H", operandTwo: "A", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x67),
  (mnemonic: "LD", operandOne: "L", operandTwo: "B", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x68),
  (mnemonic: "LD", operandOne: "L", operandTwo: "C", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x69),
  (mnemonic: "LD", operandOne: "L", operandTwo: "D", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x6A),
  (mnemonic: "LD", operandOne: "L", operandTwo: "E", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x6B),
  (mnemonic: "LD", operandOne: "L", operandTwo: "H", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x6C),
  (mnemonic: "LD", operandOne: "L", operandTwo: "L", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x6D),
  (mnemonic: "LD", operandOne: "L", operandTwo: "(HL)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x6E),
  (mnemonic: "LD", operandOne: "L", operandTwo: "A", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x6F),
  (mnemonic: "LD", operandOne: "(HL)", operandTwo: "B", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x70),
  (mnemonic: "LD", operandOne: "(HL)", operandTwo: "C", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x71),
  (mnemonic: "LD", operandOne: "(HL)", operandTwo: "D", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x72),
  (mnemonic: "LD", operandOne: "(HL)", operandTwo: "E", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x73),
  (mnemonic: "LD", operandOne: "(HL)", operandTwo: "H", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x74),
  (mnemonic: "LD", operandOne: "(HL)", operandTwo: "L", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x75),
  (mnemonic: "HALT", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x76),
  (mnemonic: "LD", operandOne: "(HL)", operandTwo: "A", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x77),
  (mnemonic: "LD", operandOne: "A", operandTwo: "B", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x78),
  (mnemonic: "LD", operandOne: "A", operandTwo: "C", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x79),
  (mnemonic: "LD", operandOne: "A", operandTwo: "D", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x7A),
  (mnemonic: "LD", operandOne: "A", operandTwo: "E", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x7B),
  (mnemonic: "LD", operandOne: "A", operandTwo: "H", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x7C),
  (mnemonic: "LD", operandOne: "A", operandTwo: "L", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x7D),
  (mnemonic: "LD", operandOne: "A", operandTwo: "(HL)", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0x7E),
  (mnemonic: "LD", operandOne: "A", operandTwo: "A", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0x7F),
  (mnemonic: "ADD", operandOne: "A", operandTwo: "B", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x80),
  (mnemonic: "ADD", operandOne: "A", operandTwo: "C", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x81),
  (mnemonic: "ADD", operandOne: "A", operandTwo: "D", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x82),
  (mnemonic: "ADD", operandOne: "A", operandTwo: "E", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x83),
  (mnemonic: "ADD", operandOne: "A", operandTwo: "H", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x84),
  (mnemonic: "ADD", operandOne: "A", operandTwo: "L", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x85),
  (mnemonic: "ADD", operandOne: "A", operandTwo: "(HL)", len: 1, cycles: 8, idleCycles: 8, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x86),
  (mnemonic: "ADD", operandOne: "A", operandTwo: "A", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x87),
  (mnemonic: "ADC", operandOne: "A", operandTwo: "B", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x88),
  (mnemonic: "ADC", operandOne: "A", operandTwo: "C", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x89),
  (mnemonic: "ADC", operandOne: "A", operandTwo: "D", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x8A),
  (mnemonic: "ADC", operandOne: "A", operandTwo: "E", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x8B),
  (mnemonic: "ADC", operandOne: "A", operandTwo: "H", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x8C),
  (mnemonic: "ADC", operandOne: "A", operandTwo: "L", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x8D),
  (mnemonic: "ADC", operandOne: "A", operandTwo: "(HL)", len: 1, cycles: 8, idleCycles: 8, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x8E),
  (mnemonic: "ADC", operandOne: "A", operandTwo: "A", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0x8F),
  (mnemonic: "SUB", operandOne: "B", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x90),
  (mnemonic: "SUB", operandOne: "C", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x91),
  (mnemonic: "SUB", operandOne: "D", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x92),
  (mnemonic: "SUB", operandOne: "E", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x93),
  (mnemonic: "SUB", operandOne: "H", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x94),
  (mnemonic: "SUB", operandOne: "L", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x95),
  (mnemonic: "SUB", operandOne: "(HL)", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x96),
  (mnemonic: "SUB", operandOne: "A", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x97),
  (mnemonic: "SBC", operandOne: "A", operandTwo: "B", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x98),
  (mnemonic: "SBC", operandOne: "A", operandTwo: "C", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x99),
  (mnemonic: "SBC", operandOne: "A", operandTwo: "D", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x9A),
  (mnemonic: "SBC", operandOne: "A", operandTwo: "E", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x9B),
  (mnemonic: "SBC", operandOne: "A", operandTwo: "H", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x9C),
  (mnemonic: "SBC", operandOne: "A", operandTwo: "L", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x9D),
  (mnemonic: "SBC", operandOne: "A", operandTwo: "(HL)", len: 1, cycles: 8, idleCycles: 8, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x9E),
  (mnemonic: "SBC", operandOne: "A", operandTwo: "A", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0x9F),
  (mnemonic: "AND", operandOne: "B", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '1', c: '0', opcode: 0xA0),
  (mnemonic: "AND", operandOne: "C", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '1', c: '0', opcode: 0xA1),
  (mnemonic: "AND", operandOne: "D", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '1', c: '0', opcode: 0xA2),
  (mnemonic: "AND", operandOne: "E", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '1', c: '0', opcode: 0xA3),
  (mnemonic: "AND", operandOne: "H", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '1', c: '0', opcode: 0xA4),
  (mnemonic: "AND", operandOne: "L", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '1', c: '0', opcode: 0xA5),
  (mnemonic: "AND", operandOne: "(HL)", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: 'Z', n: '0', h: '1', c: '0', opcode: 0xA6),
  (mnemonic: "AND", operandOne: "A", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '1', c: '0', opcode: 0xA7),
  (mnemonic: "XOR", operandOne: "B", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xA8),
  (mnemonic: "XOR", operandOne: "C", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xA9),
  (mnemonic: "XOR", operandOne: "D", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xAA),
  (mnemonic: "XOR", operandOne: "E", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xAB),
  (mnemonic: "XOR", operandOne: "H", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xAC),
  (mnemonic: "XOR", operandOne: "L", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xAD),
  (mnemonic: "XOR", operandOne: "(HL)", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xAE),
  (mnemonic: "XOR", operandOne: "A", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xAF),
  (mnemonic: "OR", operandOne: "B", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xB0),
  (mnemonic: "OR", operandOne: "C", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xB1),
  (mnemonic: "OR", operandOne: "D", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xB2),
  (mnemonic: "OR", operandOne: "E", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xB3),
  (mnemonic: "OR", operandOne: "H", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xB4),
  (mnemonic: "OR", operandOne: "L", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xB5),
  (mnemonic: "OR", operandOne: "(HL)", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xB6),
  (mnemonic: "OR", operandOne: "A", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xB7),
  (mnemonic: "CP", operandOne: "B", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xB8),
  (mnemonic: "CP", operandOne: "C", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xB9),
  (mnemonic: "CP", operandOne: "D", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xBA),
  (mnemonic: "CP", operandOne: "E", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xBB),
  (mnemonic: "CP", operandOne: "H", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xBC),
  (mnemonic: "CP", operandOne: "L", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xBD),
  (mnemonic: "CP", operandOne: "(HL)", operandTwo: "", len: 1, cycles: 8, idleCycles: 8, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xBE),
  (mnemonic: "CP", operandOne: "A", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xBF),
  (mnemonic: "RET", operandOne: "NZ", operandTwo: "", len: 1, cycles: 20, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0xC0),
  (mnemonic: "POP", operandOne: "BC", operandTwo: "", len: 1, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xC1),
  (mnemonic: "JP", operandOne: "NZ", operandTwo: "A16", len: 3, cycles: 16, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xC2),
  (mnemonic: "JP", operandOne: "A16", operandTwo: "", len: 3, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xC3),
  (mnemonic: "CALL", operandOne: "NZ", operandTwo: "A16", len: 3, cycles: 24, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xC4),
  (mnemonic: "PUSH", operandOne: "BC", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xC5),
  (mnemonic: "ADD", operandOne: "A", operandTwo: "D8", len: 2, cycles: 8, idleCycles: 8, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0xC6),
  (mnemonic: "RST", operandOne: "00H", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xC7),
  (mnemonic: "RET", operandOne: "Z", operandTwo: "", len: 1, cycles: 20, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0xC8),
  (mnemonic: "RET", operandOne: "", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xC9),
  (mnemonic: "JP", operandOne: "Z", operandTwo: "A16", len: 3, cycles: 16, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xCA),
  (mnemonic: "PREFIXCB", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0xCB),
  (mnemonic: "CALL", operandOne: "Z", operandTwo: "A16", len: 3, cycles: 24, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xCC),
  (mnemonic: "CALL", operandOne: "A16", operandTwo: "", len: 3, cycles: 24, idleCycles: 24, z: '-', n: '-', h: '-', c: '-', opcode: 0xCD),
  (mnemonic: "ADC", operandOne: "A", operandTwo: "D8", len: 2, cycles: 8, idleCycles: 8, z: 'Z', n: '0', h: 'H', c: 'C', opcode: 0xCE),
  (mnemonic: "RST", operandOne: "08H", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xCF),
  (mnemonic: "RET", operandOne: "NC", operandTwo: "", len: 1, cycles: 20, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0xD0),
  (mnemonic: "POP", operandOne: "DE", operandTwo: "", len: 1, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xD1),
  (mnemonic: "JP", operandOne: "NC", operandTwo: "A16", len: 3, cycles: 16, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xD2),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xD3),
  (mnemonic: "CALL", operandOne: "NC", operandTwo: "A16", len: 3, cycles: 24, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xD4),
  (mnemonic: "PUSH", operandOne: "DE", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xD5),
  (mnemonic: "SUB", operandOne: "D8", operandTwo: "", len: 2, cycles: 8, idleCycles: 8, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xD6),
  (mnemonic: "RST", operandOne: "10H", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xD7),
  (mnemonic: "RET", operandOne: "C", operandTwo: "", len: 1, cycles: 20, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0xD8),
  (mnemonic: "RETI", operandOne: "", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xD9),
  (mnemonic: "JP", operandOne: "C", operandTwo: "A16", len: 3, cycles: 16, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xDA),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xDB),
  (mnemonic: "CALL", operandOne: "C", operandTwo: "A16", len: 3, cycles: 24, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xDC),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xDD),
  (mnemonic: "SBC", operandOne: "A", operandTwo: "D8", len: 2, cycles: 8, idleCycles: 8, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xDE),
  (mnemonic: "RST", operandOne: "18H", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xDF),
  (mnemonic: "LDH", operandOne: "(A8)", operandTwo: "A", len: 2, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xE0),
  (mnemonic: "POP", operandOne: "HL", operandTwo: "", len: 1, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xE1),
  (mnemonic: "LD", operandOne: "(C)", operandTwo: "A", len: 2, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0xE2),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xE3),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xE4),
  (mnemonic: "PUSH", operandOne: "HL", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xE5),
  (mnemonic: "AND", operandOne: "D8", operandTwo: "", len: 2, cycles: 8, idleCycles: 8, z: 'Z', n: '0', h: '1', c: '0', opcode: 0xE6),
  (mnemonic: "RST", operandOne: "20H", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xE7),
  (mnemonic: "ADD", operandOne: "SP", operandTwo: "R8", len: 2, cycles: 16, idleCycles: 16, z: '0', n: '0', h: 'H', c: 'C', opcode: 0xE8),
  (mnemonic: "JP", operandOne: "HL", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0xE9),
  (mnemonic: "LD", operandOne: "(A16)", operandTwo: "A", len: 3, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xEA),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xEB),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xEC),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xED),
  (mnemonic: "XOR", operandOne: "D8", operandTwo: "", len: 2, cycles: 8, idleCycles: 8, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xEE),
  (mnemonic: "RST", operandOne: "28H", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xEF),
  (mnemonic: "LDH", operandOne: "A", operandTwo: "(A8)", len: 2, cycles: 12, idleCycles: 12, z: '-', n: '-', h: '-', c: '-', opcode: 0xF0),
  (mnemonic: "POP", operandOne: "AF", operandTwo: "", len: 1, cycles: 12, idleCycles: 12, z: 'Z', n: 'N', h: 'H', c: 'C', opcode: 0xF1),
  (mnemonic: "LD", operandOne: "A", operandTwo: "(C)", len: 2, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0xF2),
  (mnemonic: "DI", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0xF3),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xF4),
  (mnemonic: "PUSH", operandOne: "AF", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xF5),
  (mnemonic: "OR", operandOne: "D8", operandTwo: "", len: 2, cycles: 8, idleCycles: 8, z: 'Z', n: '0', h: '0', c: '0', opcode: 0xF6),
  (mnemonic: "RST", operandOne: "30H", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xF7),
  (mnemonic: "LDHL", operandOne: "HL", operandTwo: "SP+R8", len: 2, cycles: 12, idleCycles: 12, z: '0', n: '0', h: 'H', c: 'C', opcode: 0xF8),
  (mnemonic: "LD", operandOne: "SP", operandTwo: "HL", len: 1, cycles: 8, idleCycles: 8, z: '-', n: '-', h: '-', c: '-', opcode: 0xF9),
  (mnemonic: "LD", operandOne: "A", operandTwo: "(A16)", len: 3, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xFA),
  (mnemonic: "EI", operandOne: "", operandTwo: "", len: 1, cycles: 4, idleCycles: 4, z: '-', n: '-', h: '-', c: '-', opcode: 0xFB),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xFC),
  (mnemonic: "", operandOne: "", operandTwo: "", len: 0, cycles: 0, idleCycles: 0, z: '-', n: '-', h: '-', c: '-', opcode: 0xFD),
  (mnemonic: "CP", operandOne: "D8", operandTwo: "", len: 2, cycles: 8, idleCycles: 8, z: 'Z', n: '1', h: 'H', c: 'C', opcode: 0xFE),
  (mnemonic: "RST", operandOne: "38H", operandTwo: "", len: 1, cycles: 16, idleCycles: 16, z: '-', n: '-', h: '-', c: '-', opcode: 0xFF),
]